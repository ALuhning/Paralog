{"version":3,"sources":["config.js","frontend/component/common/ImageLoad/ImageLoad.js","frontend/component/common/Button/Button.js","frontend/component/Header/Nav/navigation.js","frontend/component/common/spinner/spinner.js","frontend/component/Header/Header.js","frontend/component/footer/footer.js","frontend/component/home/poster/poster.js","frontend/component/home/features/features.js","frontend/component/home/home.js","frontend/utils/Encryption.js","frontend/schemas/MilitaryJump.js","frontend/utils/ThreadDB.js","frontend/component/Log/info/info.js","frontend/component/common/classification/classifications.js","frontend/component/Log/screen/screen.js","frontend/component/Log/log.js","frontend/component/jump/jump.js","frontend/component/creation/creationAccount/creationAccount.js","frontend/component/Account/account.js","frontend/component/creation/creationProfile/creationProfile.js","frontend/component/Profile/profile.js","frontend/component/creation/creationSingle/creationSingle.js","frontend/component/common/Backdrop/backdrop.js","frontend/component/common/Modal/modal.js","frontend/component/Share/share.js","frontend/component/Single/single.js","frontend/component/Log/animation/animation.js","frontend/component/SocialShare/SocialShare.js","frontend/component/showpage/showpage.js","frontend/container/App/App.js","frontend/container/index.js","index.js"],"names":["CONTRACT_NAME","getConfig","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","keyPath","process","HOME","masterAccount","Error","module","exports","ImageLoader","image","style","Button","action","description","disabled","generate","require","Navigation","Component","props","history","push","handleChange","name","value","words","alliterative","spaced","componentDidMount","login","render","accountName","number","requestSignOut","des","switchToProfile","InfoChangeHandler","Card","textAlign","padding","marginBottom","AddJump","Spinners","Header","load","accountId","length","show","logo","minWidth","width","Footer","vitalPointAILogo","height","Poster","requestSignIn","showButton","atmospheric","Features","skydive","round","tandem","Home","keccak256","parseEncryptionKey","keyKey","APPID","key","localStorage","getItem","buf","Buffer","from","nacl","box","secretKeyLength","keyPair","fromSecretKey","setItem","secretKey","toString","_key","decryptSecretBox","msg64","nonce","Uint8Array","secretbox","nonceLength","copy","decodedBuf","open","encryptSecretBox","str","randomBytes","fullBuf","set","generateHash","data","militaryJumpSchema","$id","$schema","title","type","required","properties","_id","jumper","jumpName","jumpDate","dropZone","dropAltitude","minimum","aircraftType","jumpType","milExitType","milMainCanopyType","milMainCanopySN","milResCanopyType","milResCanopySN","pullAltitude","freefall","milFFCanopyType","milFFCanopySN","milFFResCanopyType","milFFResCanopySN","jumpPhotos","contentEncoding","contentMediaType","jumpVideos","DEFAULT_GAS_VALUE","getIdentity","cached","Libp2pCryptoIdentity","fromString","retrieveId","window","contract","threadId","identity","err","fromRandom","encryptedId","stringThreadId","ThreadID","setIdentity","threadIdarray","initiateDB","ctx","Context","console","log","withUserKey","USER_API_KEY","secret","USER_API_SECRET","db","Client","getToken","JSON","stringify","context","toJSON","newDB","newCollection","JUMPER_IDENTIFIER","Info","Date","verificationHash","setState","event","handleDateChange","target","then","result","generateId","Math","randomBuffer","b64","btoa","handleSubmit","e","preventDefault","create","state","handleRandomName","handleNameChange","handleAltitudeChange","handlePullAltitude","handleFreeFallChange","handleDropZone","handleAirCraftType","handleJumpType","handleMilExitType","handleMilMainCanopyType","handleMilMainCanopySN","handleMilResCanopyType","handleMilResCanopySN","Classifications","classifications","Screen","margin","position","zIndex","freefallpic","shadow","top","backgroundImage","backgroundPlaceholder","borderRadius","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginTop","Log","AlertDismissible","Jump","JumpDisplay","CreationAccount","Account","jumps","Jumps","map","jump","jumpIdentifier","pathname","hash","CreationProfile","handleDelete","deleteJumpProfile","tokenId","response","len","newJumps","catch","solo","info","deleteJump","marginLeft","color","fontSize","display","flexBasis","justifyContent","Profile","running","textDecoration","listStyleType","Goodbye","CreationSingle","CreationSingleSmall","backdrop","clicked","Modal","CancelHandler","children","transform","opacity","SharePage","copied","shareURL","params","text","via","prop","encodeURIComponent","back","backCancelHandler","location","address","origin","backgroundColor","wordWrap","cursor","boxShadow","shareOnTwitter","shareOnFacebook","Single","backShowHandler","slice","filter","SendAndShare","flexDirection","Share","share","Animation","componentWillMount","logJump","parseInt","concat","SocialShare","loading","getJump","poster","maxWidth","JumpType","rate","common","uncommon","rare","veryRare","ShowPage","dotenv","config","randomColor","App","constructor","loggedIn","loaded","getJumps","wallet","signOut","setTimeout","signedOutFlow","substring","backDrop","token","signedInFlow","bind","walletAccount","isSignedIn","getAccountId","res","nearConfig","backdropCancelHandler","jumpArray","BACKGROUNDCOLOR","green","purple","blue","pink","COLOR","orange","gray","sausage","owner","quote","dna","AppBuilder","PUBLIC_URL","InitContract","near","nearlib","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","WalletAccount","acct","connection","Contract","viewMethods","changeMethods","sender","nearInitPromise","document","getElementById","error"],"mappings":"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","file":"src.7f1e8a5a.js","sourceRoot":"../src","sourcesContent":["/* TODO: fill this in!*/\nconst CONTRACT_NAME = \"paralog.vitalpointai.testnet\";\n\nfunction getConfig(env) {\n  switch (env) {\n    case \"production\":\n    case \"development\":\n      return {\n        networkId: \"default\",\n        nodeUrl: \"https://rpc.nearprotocol.com\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.nearprotocol.com\",\n        helperUrl: \"https://helper.nearprotocol.com\",\n      };\n    case \"devnet\":\n      return {\n        networkId: \"devnet\",\n        nodeUrl: \"https://rpc.devnet.nearprotocol.com\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.devnet.nearprotocol.com\",\n        helperUrl: \"https://helper.devnet.nearprotocol.com\",\n      };\n    case \"betanet\":\n      return {\n        networkId: \"betanet\",\n        nodeUrl: \"https://rpc.betanet.nearprotocol.com\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.betanet.nearprotocol.com\",\n        helperUrl: \"https://helper.betanet.nearprotocol.com\",\n      };\n    case \"local\":\n      return {\n        networkId: \"local\",\n        nodeUrl: \"http://localhost:3030\",\n        keyPath: `${process.env.HOME}/.near/validator_key.json`,\n        walletUrl: \"http://localhost:4000/wallet\",\n        contractName: CONTRACT_NAME,\n      };\n    case \"test\":\n    case \"ci\":\n      return {\n        networkId: \"shared-test\",\n        nodeUrl: \"http://shared-test.nearprotocol.com:3030\",\n        contractName: CONTRACT_NAME,\n        masterAccount: \"test.near\",\n      };\n    case \"ci-betanet\":\n      return {\n        networkId: \"shared-test-staging\",\n        nodeUrl: \"http://rpc.ci-betanet.nearprotocol.com\",\n        contractName: CONTRACT_NAME,\n        masterAccount: \"test.near\",\n      };\n    default:\n      throw Error(\n        `Unconfigured environment '${env}'. Can be configured in src/config.js.`\n      );\n  }\n}\n\nmodule.exports = getConfig;","import React from 'react';\n\nconst ImageLoader = ({image,style}) => (\n    <img src={image} style={style} alt=\"\"/>\n)\n\nexport default ImageLoader","import React from 'react';\nimport './Button.css'\n\nconst Button = ({action,description,disabled = false}) => {\n    return (\n      <button\n        className=\"Button\"\n        onClick={action}\n        disabled={disabled}>{description}</button>\n    )\n}\n\nexport default Button","import React, { Component } from 'react';\nimport { NavLink, Redirect, withRouter } from 'react-router-dom';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\n\nimport Button from '../../common/Button/Button';\nimport './navigation.css';\n\nlet generate = require('project-name-generator');\n\nclass Navigation extends Component {\n    componentDidMount() {\n        if (!this.props.login) { return <Redirect push to=\"/\" /> }\n    }\n    switchToProfile = () => {\n        this.props.history.push(\"/profile\")\n    }\n\n    InfoChangeHandler = () => {\n        this.props.handleChange({name:\"jumpName\", value: generate({ words: 2, alliterative: true }).spaced})\n    }\n\n    render() {\n        let { accountName, number, requestSignOut } = this.props\n        let des = \"My Jumps (\" + number + \")\"\n        return (\n           \n            <div className=\"wrap\">\n                <div className=\"account\">\n                    <NavLink to=\"/account\" ><Button description={des} /></NavLink>\n                    <Card accountName={accountName} requestSignOut={requestSignOut} switchToProfile={this.switchToProfile} />\n                    <NavLink to=\"/log\"><AddJump InfoChangeHandler={this.InfoChangeHandler}/></NavLink>\n                </div>\n               \n            </div>\n            \n        )\n    }\n}\n\nexport default withRouter(Navigation)\n\nconst Card = ({ accountName, requestSignOut, switchToProfile }) => {\n    let name = \"@\" + accountName + \"▾\"\n    return (\n        <div className=\"dropdown\">\n            <button className=\"menutop\">{name}</button>\n            <div className=\"dropdown-content\">\n                <ul style={{textAlign:\"center\", padding:\"2px\",marginBottom: \"0\"}}>\n                    <li className=\"listyle\"><button onClick={switchToProfile}>Edit Profile</button></li>\n                    <li className=\"listyle\"><button onClick={requestSignOut}>Sign Out</button></li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nconst AddJump = ({InfoChangeHandler}) => (    \n        <BsFillPlusSquareFill className=\"add-jump\" onClick={InfoChangeHandler}/>\n)","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport './spinner.css'\n\nconst Spinners = () => {\n    return (\n        <div>\n            <Spinner animation=\"border\" role=\"status\" className=\"spinner-size\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n    )\n}\n\nexport default Spinners","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport ImageLoader from '../common/ImageLoad/ImageLoad';\nimport Navigation from './Nav/navigation'\nimport { GrGithub } from 'react-icons/gr'\nimport logo from '../../../assets/ParaLog-logo.png';\nimport Spinners from '../common/spinner/spinner';\n\n\nimport './Header.css';\n\nclass Header extends Component {\n    render() {\n        let { login, load, requestSignOut, accountId, length, handleChange } = this.props\n        let show = <Spinners />\n        if (login && load) {\n            show =\n            <Navbar>\n            <Navbar.Brand><NavLink exact to=\"/\" ><ImageLoader image={logo} style={{ minWidth: \"100px\", width: \"70%\" }} /></NavLink></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n               \n            </Nav>\n            <Nav>\n                <Navigation\n                accountName={accountId}\n                number={length}\n                requestSignOut={requestSignOut}\n                login={login}\n                handleChange={handleChange} />\n            </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n        } else if (load) {\n            show =\n            <Navbar>\n            <Navbar.Brand><NavLink exact to=\"/\" ><ImageLoader image={logo} style={{ minWidth: \"100px\", width: \"70%\" }} /></NavLink></Navbar.Brand>\n            <Nav className=\"mr-auto\">\n            </Nav>\n            <Nav>\n                <Nav.Link href=\"/\">About</Nav.Link>\n                <Nav.Link href=\"https://github.com/VitalPointAI/Paralog\"><GrGithub /></Nav.Link>\n            </Nav>\n            </Navbar>\n              \n        }\n        return (\n            <div>\n                {show}\n            </div>\n        )\n    }\n\n}\n\nexport default Header","import React from 'react';\nimport ImageLoad from '../common/ImageLoad/ImageLoad'\nimport vitalPointAILogo from '../../../assets/vitalpointai.png'\nimport './footer.css';\n\nconst Footer = () => (\n    <div className=\"footer\">\n        <div className=\"left\">\n            <ImageLoad image={vitalPointAILogo} style={{height: \"7em\"}} />\n            <div className=\"text\">\n                <p>A Vital Point AI project.</p>\n                <p>Powering augmented cognition</p>\n                <p>with blockchain, data and MR.</p>\n                <p>Learn more at \n                    <a\n                        href=\"https://vitalpoint.ai/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"blue\" > vitalpoint.ai</a></p>\n            </div>\n        </div>\n        <div className=\"right\">\n            <p>© 2020 Vital Point AI  </p>\n            <p>All Rights Reserved.</p>\n            <p className=\"blue\">Privacy Policy  <span className=\"black\"> | </span>  Terms of Use</p>\n        </div>\n\n    </div>\n)\n\nexport default Footer","import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Button from '../../common/Button/Button';\nimport ImageLoader from '../../common/ImageLoad/ImageLoad'\n\nimport atmospheric from '../../../../assets/skydive-blockchain.png';\nimport \"./poster.css\";\n\nclass Poster extends Component {\n    componentDidMount() {\n\n    }\n    render() {\n        let { requestSignIn, load, login, accountId } = this.props\n        let showButton = '';\n        if (!login) { showButton = <Button description=\"Start Logging\" action={requestSignIn} /> }\n        else if (login && load) { showButton = <div className=\"show\">Logged In {accountId}</div> }\n        return (\n            <Container>\n            \n                <div className=\"backup\">\n                    <div className=\"textPoster\" >\n                        <h1 className=\"main-title\">JUMP. FLY. LAND. RECORD.</h1>\n                        <p className=\"text1\">Safeguard your jump record.</p>\n                        <p className=\"text2\">Parachuting meets Blockchain: Provable, Immutable, Shareable.</p>\n                        {showButton}\n                      \n                    </div>\n                    <div className=\"imagePoster\">\n                        <ImageLoader image={atmospheric} style={{ width: '100%' }} />\n                    </div>\n                </div>\n          \n            </Container>\n        )\n    }\n}\n\nexport default Poster","import React, { Component } from 'react';\nimport { CardColumns, Card, Button } from 'react-bootstrap';\nimport ImageLoader from '../../common/ImageLoad/ImageLoad';\nimport skydive from '../../../../assets/skydiving.jpg';\nimport tandem from '../../../../assets/tandem-skydive.jpg';\nimport round from '../../../../assets/round-para.jpg';\n\nimport \"./features.css\";\n\nclass Features extends Component {\n    componentDidMount() {\n\n    }\n    render() {\n\n      \n\n        return (\n                <CardColumns>\n                    <Card>\n                        <Card.Header>\n                            <ImageLoader image={skydive} style={{ width: '100%' }} />\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Title>\n                                Digital LogBook\n                            </Card.Title>\n                            <Card.Text>\n                                Ever stop to think what happens if you lose or destroy your parachute log book?\n                            </Card.Text>\n                            <Button variant=\"primary\">Learn More</Button>\n                        </Card.Body>\n                        <Card.Footer className=\"text-muted\">Permanent Records</Card.Footer>\n                    </Card>\n                    <Card>\n                    <Card.Header>\n                        <ImageLoader image={round} style={{ width: '100%' }} />\n                     </Card.Header>\n                        <Card.Body>\n                            <Card.Title>\n                                Military and Civilian\n                            </Card.Title>\n                            <Card.Text>\n                                Track everything - round, square, high, low, solo, tandem, formation, basejump. \n                            </Card.Text>\n                            <Button variant=\"primary\">Learn More</Button>\n                        </Card.Body>\n                        <Card.Footer className=\"text-muted\">Own Your Data</Card.Footer>\n                    </Card>\n                    <Card>\n                        <Card.Header>\n                            <ImageLoader image={tandem} style={{ width: '100%' }} />\n                         </Card.Header>\n                        <Card.Body>\n                            <Card.Title>\n                                Instructors and Coaches\n                            </Card.Title>\n                            <Card.Text>\n                                Digital attestations, student/coach linkups, more reliable records, no guessing.\n                            </Card.Text>\n                            <Button variant=\"primary\">Learn More</Button>\n                        </Card.Body>\n                        <Card.Footer className=\"text-muted\">Build Your Business</Card.Footer>\n                    </Card>\n                </CardColumns>\n        )\n    }\n}\n\nexport default Features","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Poster from './poster/poster'\nimport Features from './features/features'\n\nimport './home.css';\nclass Home extends Component {\n    render() {\n        let { login, load, requestSignIn, accountId, length } = this.props\n        if (login && length === 0) {return <Redirect to=\"/log\"/>}\n        return (\n          <Container>\n                <Poster \n                    requestSignIn={requestSignIn} \n                    load={load} \n                    login={login} \n                    accountId={accountId}\n                />\n                <Features />\n            </Container>\n        )\n    }\n}\n\nexport default Home","import * as nacl from 'tweetnacl';\n\nconst keccak256 = require('keccak256');\n\n    /**\n    read private key from local storage\n    - if found, recreate the related key pair\n    - if not found, create a new key pair and save it to local storage\n    */\nexport function parseEncryptionKey(accountId) {\n    const keyKey = \"enc_key:\" + accountId + \":\" + process.env.APPID + \":\";\n    let key = localStorage.getItem(keyKey);\n    if (key) {\n    const buf = Buffer.from(key, 'base64');\n    if (buf.length !== nacl.box.secretKeyLength) {\n        throw new Error(\"Given secret key has wrong length\");\n    }\n    key = nacl.box.keyPair.fromSecretKey(buf);\n    } else {\n    key = new nacl.box.keyPair();\n    localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n    }\n    this._key = key;\n}\n\n\n /**\nunbox encrypted messages with our secret key\n@param {string} msg64 encrypted message encoded as Base64\n@return {string} decoded contents of the box\n*/\nexport function decryptSecretBox(msg64) {\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.secretbox.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.secretbox.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.secretbox.open(box, nonce, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n}\n\n\n/**\nbox an unencrypted message with our secret key\n@param {string} str the message to wrap in a box\n@return {string} base64 encoded box of incoming message\n*/\nexport function encryptSecretBox(str) {\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.secretbox.nonceLength);\n    const box = nacl.secretbox(buf, nonce, this._key.secretKey);\n    const fullBuf = new Uint8Array(box.length + nacl.secretbox.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.secretbox.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n}\n\nexport function generateHash(data) {\n    return keccak256(data).toString('hex');\n}","export const militaryJumpSchema = {\n    $id: 'https://example.com/astronaut.schema.json',\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    title: 'MilitaryJump',\n    type: 'object',\n    required: ['_id'],\n    properties: {\n      _id: {\n        type: 'string',\n      },\n      jumper: {\n        type: 'string',\n      },\n      jumpName: {\n        type: 'string',\n      },\n      jumpDate: {\n        type: 'string',\n      },\n      dropZone: {\n        type: 'string',\n      },\n      dropAltitude: {\n        type: 'integer',\n        minimum: 0,\n      },\n      aircraftType: {\n        type: 'string',\n      },\n      jumpType: {\n        type: 'string',\n      },\n      milExitType: {\n        type: 'string',\n      },\n      milMainCanopyType: {\n        type: 'string',\n      },\n      milMainCanopySN: {\n        type: 'string',\n      },\n      milResCanopyType: {\n        type: 'string',\n      },\n      milResCanopySN: {\n        type: 'string',\n      },\n      pullAltitude: {\n        type: 'integer',\n        minimum: 0,\n      },\n      freefall: {\n        type: 'integer',\n        minimum: 0,\n      },\n      milFFCanopyType: {\n        type: 'string',\n      },\n      milFFCanopySN: {\n        type: 'string',\n      },\n      milFFResCanopyType: {\n        type: 'string',\n      },\n      milFFResCanopySN: {\n        type: 'string',\n      },\n      jumpPhotos: {\n        type: 'string',\n        contentEncoding: 'base64',\n        contentMediaType: 'image/png',\n      },\n      jumpVideos: {\n        type: 'string',\n        contentEncoding: 'base64',\n        contentMediaType: 'audio/mpeg',\n      },\n    },\n}\n   ","import {Libp2pCryptoIdentity} from '@textile/threads-core';\n\nimport { Context } from '@textile/textile'; \nimport { Client } from '@textile/threads-client';\nimport { ThreadID } from '@textile/threads-id';\nimport { encryptSecretBox, decryptSecretBox, parseEncryptionKey } from './Encryption'\nimport { militaryJumpSchema } from '../schemas/MilitaryJump'\n\nexport const DEFAULT_GAS_VALUE = 10000000000000;\n\nasync function getIdentity(accountId) {\n\n    /** Restore any cached user identity first */\n    const cached = localStorage.getItem(\"paralog-db-identity\")\n    \n    if (cached !== null) {\n    /**Convert the cached identity string to a Libp2pCryptoIdentity and return */\n    return Libp2pCryptoIdentity.fromString(cached)\n    }\n\n    /** Try and retrieve from contract if it exists */\n    if (cached === null) {\n            try {\n                let retrieveId = await window.contract.getIdentity({threadId: accountId});\n                let identity = await decryptSecretBox(retrieveId);\n                return Libp2pCryptoIdentity.fromString(identity.identity); \n            } catch (err) {\n                parseEncryptionKey(accountId);\n                /** No cached identity existed, so create a new one */\n                let identity = await Libp2pCryptoIdentity.fromRandom()\n                /** Add the string copy to the cache */\n                localStorage.setItem(\"paralog-db-identity\", identity.toString())\n                /** Return the random identity */\n                let encryptedId = await encryptSecretBox(identity.toString());\n               \n                const threadId = ThreadID.fromRandom();\n                let stringThreadId = threadId.toString();\n                localStorage.setItem(\"paralog-threadId\", stringThreadId);\n             \n                await window.contract.setIdentity({threadId: encryptedId, threadIdarray: stringThreadId}, DEFAULT_GAS_VALUE);\n                return Libp2pCryptoIdentity.fromString(identity.toString()); \n            }\n    }             \n}\n\nexport async function initiateDB(accountId) {\n    const ctx = new Context();\n    const identity = await getIdentity(accountId);\n    let threadId = localStorage.getItem(\"paralog-threadId\");       \n    console.log('current state threadid ', threadId);\n\n    // Update the context WITH the user group key information\n    await ctx.withUserKey({\n        key: process.env.USER_API_KEY,\n        secret: process.env.USER_API_SECRET,\n        type: 1, // User group key type\n    })\n\n    const db = new Client(ctx)\n    await db.getToken(identity)\n    console.log(JSON.stringify(db.context.toJSON()))\n\n    if(!ThreadID.fromString(threadId)){\n        await db.newDB(ThreadID.fromString(threadId));\n        await db.newCollection(ThreadID.fromString(threadId), 'MilitaryJump', militaryJumpSchema);\n    }\n    return db\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { BsCardHeading, BsFillCalendarFill, BsArrowUp, BsFillClockFill } from \"react-icons/bs\";\nimport { Form, InputGroup } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\n\nimport Button from '../../common/Button/Button';\n\nimport './info.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { ThreadID } from '@textile/threads-id';\nimport { generateHash } from '../../../utils/Encryption';\nimport { initiateDB } from '../../../utils/ThreadDB';\n\nlet generate = require('project-name-generator');\n\nconst JUMPER_IDENTIFIER = 8;\nlet db = null;\n\nclass Info extends Component {\n\n        state = {\n            jumpName: `${this.props.jumpName}`,\n            jumpDate: new Date(),\n            jumper: this.props.accountId,\n            freefall: '',\n            dropAltitude: '',\n            pullAltitude: '',\n            dropZone: '',\n            aircraftType: '',\n            jumpType: '',\n            milExitType: '',\n            milMainCanopyType: '',\n            milMainCanopySN: '',\n            milResCanopyType: '',\n            milResCanopySN: '',\n            milFFCanopyType: '',\n            milFFCanopySN: '',\n            milFFResCanopyType: '',\n            milFFResCanopySN: '',\n            jumpPhotos: '',\n            jumpVideos: '',\n            verificationHash: '',\n        };\n\n    componentDidMount() {\n        initiateDB(this.props.accountId).then((result) => {\n            db = result;\n        })\n    }\n\n    handleRandomName = () => {\n        let name = generate({ words: 2, alliterative: true }).spaced\n        this.setState({ jumpName: name })\n        this.props.handleChange({ name: \"jumpName\", value: name })\n    }\n\n    handleDateChange = (event) => {\n        console.log(event)\n        this.setState({jumpDate: event})\n        this.props.handleDateChange({ name: \"jumpDate\", value: event });\n    }\n\n    handleNameChange = (event) => {\n        let value = event.target.value;\n        this.setState({ jumpName: value })\n        this.props.handleChange({ name: \"jumpName\", value })\n    }\n\n    handleFreeFallChange = (event) => {\n        let value = event.target.value;\n        this.setState({ freefall: value })\n        this.props.handleChange({ name: \"freefall\", value })\n    }\n\n    handleAltitudeChange = (event) => {\n        let value = event.target.value;\n        this.setState({ dropAltitude: value })\n        this.props.handleChange({ name: \"dropAltitude\", value })\n    }\n\n    handlePullAltitude = (event) => {\n        let value = event.target.value;\n        this.setState({ pullAltitude: value })\n        this.props.handleChange({ name: \"pullAltitude\", value })\n    }\n\n    handleDropZone = (event) => {\n        let value = event.target.value;\n        this.setState({ dropZone: value })\n        this.props.handleChange({ name: \"dropZone\", value })\n    }\n\n    handleAirCraftType = (event) => {\n        let value = event.target.value;\n        this.setState({ aircraftType: value })\n        this.props.handleChange({ name: \"aircraftType\", value })\n    }\n\n    handleJumpType = (event) => {\n        let value = event.target.value;\n        this.setState({ jumpType: value })\n        this.props.handleChange({ name: \"jumpType\", value })\n    }\n\n    handleMilExitType = (event) => {\n        let value = event.target.value;\n        this.setState({ milExitType: value })\n        this.props.handleChange({ name: \"milExitType\", value })\n    }\n\n    handleMilMainCanopyType = (event) => {\n        let value = event.target.value;\n        this.setState({ milMainCanopyType: value })\n        this.props.handleChange({ name: \"milMainCanopyType\", value })\n    }\n\n    handleMilMainCanopySN = (event) => {\n        let value = event.target.value;\n        this.setState({ milMainCanopySN: value })\n        this.props.handleChange({ name: \"milMainCanopySN\", value })\n    }\n\n    handleMilResCanopyType = (event) => {\n        let value = event.target.value;\n        this.setState({ milResCanopyType: value })\n        this.props.handleChange({ name: \"milResCanopyType\", value })\n    }\n\n    handleMilResCanopySN = (event) => {\n        let value = event.target.value;\n        this.setState({ milResCanopySN: value })\n        this.props.handleChange({ name: \"milResCanopySN\", value })\n    }\n\n    generateId() {\n        let buf = Math.randomBuffer(JUMPER_IDENTIFIER);\n        let b64 = btoa(buf);\n        return b64;\n    }\n\n    async handleSubmit(e) {\n\n        let { handleChange, history, accountId, jumper, jumpName, jumpDate,\n            dropZone, dropAltitude, aircraftType, jumpType, milExitType,\n            milMainCanopyType, milMainCanopySN, milResCanopyType,\n            milResCanopySN, pullAltitude, freefall, milFFCanopyType,\n            milFFCanopySN, milFFResCanopyType, milFFResCanopySN,\n            jumpPhotos, jumpVideos } = this.props\n\n        e.preventDefault()\n        let data = jumper+jumpDate+dropZone;\n        let verificationHash = generateHash(data);\n\n        await db.create(ThreadID.fromString(this.state.threadId), 'MilitaryJump', [\n                  {\n                    _id: this.generateId(),\n                    jumper: accountId,\n                    jumpName: jumpName,\n                    jumpDate: jumpDate,\n                    dropZone: dropZone,\n                    dropAltitude: dropAltitude,\n                    aircraftType: aircraftType,\n                    jumpType: jumpType,\n                    milExitType: milExitType,\n                    milMainCanopyType: milMainCanopyType,\n                    milMainCanopySN: milMainCanopySN,\n                    milResCanopyType: milResCanopyType,\n                    milResCanopySN: milResCanopySN,\n                    pullAltitude: pullAltitude,\n                    freefall: freefall,\n                    milFFCanopyType: milFFCanopyType,\n                    milFFCanopySN: milFFCanopySN,\n                    milFFResCanopyType: milFFResCanopyType,\n                    milFFResCanopySN: milFFResCanopySN,\n                    jumpPhotos: jumpPhotos,\n                    jumpVideos: jumpVideos,\n                    verificationHash: verificationHash,\n                  }\n        ]);\n        handleChange(\n            { name: \"jumpName\", value: this.state.jumpName })\n        history.push(\"/logging\")\n    }\n\n    render() {\n    \n        return (\n            <div className=\"inputboard\">\n            <p className=\"quote\">Just fill out the jump data and we’ll do the rest.</p>\n                <p className=\"title\">Jump Name</p>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text id=\"inputGroupPrepend\"><BsCardHeading onClick={this.handleRandomName} /></InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <Form.Control\n                                name=\"Name\"\n                                type=\"text\"\n                                placeholder=\"Jump name\"\n                                onChange={this.handleNameChange}\n                                value={this.state.jumpName}\n                                required\n                            />\n                        </InputGroup>\n                    </Form.Row>\n                   \n                    <p className=\"title\">Jump Data</p>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"><BsFillCalendarFill /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <DatePicker \n                                className=\"datepicker\"\n                                selected={this.state.jumpDate}\n                                onChange={this.handleDateChange}\n                                name=\"jumpDate\"\n                                dateFormat=\"MM/dd/yyyy\"\n                                required\n                            />\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"><BsArrowUp /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control\n                                name=\"dropAltitude\"\n                                type=\"number\"\n                                placeholder=\"Drop Altitude\"\n                                onChange={this.handleAltitudeChange}\n                                value={this.state.dropAltitude}\n                                required\n                            />\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"><BsArrowUp /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control\n                                name=\"pullAltitude\"\n                                type=\"number\"\n                                placeholder=\"Pull Altitude\"\n                                onChange={this.handlePullAltitude}\n                                value={this.state.pullAltitude}\n                                required\n                            />\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"> <BsFillClockFill /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control\n                                name=\"freefall\"\n                                type=\"number\"\n                                placeholder=\"Seconds in Freefall\"\n                                onChange={this.handleFreeFallChange}\n                                value={this.state.freefall}\n                                required\n                            />\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"> <BsFillClockFill /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control as=\"select\"\n                                name=\"dropZone\"\n                                type=\"string\"\n                                placeholder=\"Select Drop Zone\"\n                                onChange={this.handleDropZone}\n                                value={this.state.dropZone}\n                                required\n                            >\n                            <option>Perris Valley</option>\n                            <option>Mountain View</option>\n                            </Form.Control>\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"> <BsFillClockFill /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control as=\"select\"\n                                name=\"aircraftType\"\n                                type=\"string\"\n                                placeholder=\"Select Aircraft\"\n                                onChange={this.handleAirCraftType}\n                                value={this.state.aircraftType}\n                                required\n                            >\n                            <option>CC-130J</option>\n                            <option>Twin Otter</option>\n                            </Form.Control>\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"> <BsFillClockFill /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control as=\"select\"\n                                name=\"jumpType\"\n                                type=\"string\"\n                                placeholder=\"Choose Jump Type\"\n                                onChange={this.handleJumpType}\n                                value={this.state.jumpType}\n                                required\n                            >\n                            <option>Static Line</option>\n                            <option>Freefall</option>\n                            </Form.Control>\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"> <BsFillClockFill /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control as=\"select\"\n                                name=\"milExitType\"\n                                type=\"string\"\n                                placeholder=\"Choose Exit Type\"\n                                onChange={this.handleMilExitType}\n                                value={this.state.milExitType}\n                                required\n                            >\n                            <option>Double Door</option>\n                            <option>Ramp</option>\n                            <option>Helo</option>\n                            </Form.Control>\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"> <BsFillClockFill /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control as=\"select\"\n                                name=\"milMainCanopyType\"\n                                type=\"string\"\n                                placeholder=\"Choose Main Canopy\"\n                                onChange={this.handleMilMainCanopyType}\n                                value={this.state.milMainCanopyType}\n                                required\n                            >\n                            <option>CT-1</option>\n                            <option>CT-6</option>\n                            <option>Helo</option>\n                            </Form.Control>\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"><BsArrowUp /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control\n                                name=\"milMainCanopySN\"\n                                type=\"string\"\n                                placeholder=\"Main Canopy Serial #\"\n                                onChange={this.handleMilMainCanopySN}\n                                value={this.state.milMainCanopySN}\n                                required\n                            />\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"> <BsFillClockFill /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control as=\"select\"\n                                name=\"milResCanopyType\"\n                                type=\"string\"\n                                placeholder=\"Choose Reserve Canopy\"\n                                onChange={this.handleMilResCanopyType}\n                                value={this.state.milResCanopyType}\n                                required\n                            >\n                            <option>CR-1</option>\n                            </Form.Control>\n                    </InputGroup>\n                    </Form.Row>\n                    <Form.Row>\n                    <InputGroup className=\"spacing\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\"><BsArrowUp /></InputGroup.Text>\n                        </InputGroup.Prepend>\n                            <Form.Control\n                                name=\"milResCanopySN\"\n                                type=\"string\"\n                                placeholder=\"Reserve Canopy Serial #\"\n                                onChange={this.handleMilResCanopySN}\n                                value={this.state.milResCanopySN}\n                                required\n                            />\n                    </InputGroup>\n                    </Form.Row>\n                    <Button description=\"Log Jump\" />\n                </Form>\n                <p className=\"quote\">This will log your jump in your permanent jump record to share or review as you wish.\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Info)","import React from 'react'\nimport ImageLoader from '../ImageLoad/ImageLoad';\nimport classifications from '../../../../assets/classifications.png';\n\nconst Classifications = ({\n    width = \"100%\"\n}) => {\n    return (\n        <div>\n        <div className=\"classifications\">\n            <ImageLoader image={classifications} style={{ width: width }} />\n        </div>\n\n            \n        </div>\n    )\n}\n\nexport default Classifications","import React, { Component } from 'react';\nimport Classifications from '../../common/classification/classifications';\nimport backgroundPlaceholder from '../../../../assets/google-map-placeholder.jpg'\nimport { CardGroup, Card } from 'react-bootstrap';\n\nimport './screen.css';\nimport freefallpic from '../../../../assets/freefall.png'\n\n\nclass Screen extends Component {\n\n    render() {\n        let { jumpDate, dropAltitude, freefall } = this.props\n      \n        let jumpType = (\n            <div style={{ width: \"100%\", height: \"100%\", margin: \"auto\", position: \"relative\", zIndex: \"10\", }}>\n            <svg width=\"147px\" height=\"146px\" viewBox=\"0 0 147 146\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\">\n                <defs>\n                    <pattern id=\"image\" patternUnits=\"userSpaceOnUse\" height=\"147\" width=\"146\">\n                        <image x=\"0\" y=\"0\" height=\"147\" width=\"146\" xlinkHref={freefallpic}></image>\n                    </pattern>\n                </defs>\n                <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <g id=\"gen1\" transform=\"translate(-782.000000, -1123.000000)\">\n                        <g id=\"c-phase1-(1)\" transform=\"translate(783.000000, 1124.000000)\">\n                            <ellipse id=\"Oval\" fill=\"url(#image)\"  cx=\"72.2491349\" cy=\"72\" rx=\"72.2491349\" ry=\"72\"></ellipse>\n                           \n                            <ellipse id=\"Oval\" stroke=\"#24272A\" strokeWidth=\"2\" cx=\"72.2491349\" cy=\"72\" rx=\"72.2491349\" ry=\"72\"></ellipse>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n            \n        </div>\n        )\n        let shadow = (\n            <div style={{ width: \"60%\", position: \"relative\", top: \"-10px\", margin: \"auto\" }}>\n                <svg width=\"200px\" height=\"25px\" viewBox=\"0 0 200 25\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\">\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" fillOpacity=\"0.2\">\n                        <g id=\"create\" transform=\"translate(-801.000000, -709.000000)\" fill=\"#000000\">\n                            <ellipse id=\"Oval\" cx=\"901\" cy=\"721.048193\" rx=\"100\" ry=\"12.0481928\"></ellipse>\n                        </g>\n                    </g>\n                </svg>\n            </div>\n        )\n    \n        let style = {\n            backgroundImage: `url(${backgroundPlaceholder})`,\n            borderRadius: \"10px\",\n            borderTopLeftRadius: \"0px\",\n            borderBottomLeftRadius: \".25rem\",\n            borderTopRightRadius: \"0px\",\n            borderBottomRightRadius: \".25rem\",\n            padding: \"5%\",\n            marginBottom: \"5%\",\n            marginTop: \"-5px\",\n            textAlign: \"center\"\n        }\n        \n        return (\n           \n                <div className=\"board\">\n                   \n                        <CardGroup>\n                            <Card>\n                                <Card.Header as=\"h6\">\n                                    Date\n                                </Card.Header>\n                                <Card.Body className=\"card-body-adjustment\">\n                                    {jumpDate}\n                                </Card.Body>\n                            </Card>\n                            <Card>\n                                <Card.Header as=\"h6\">\n                                    Drop Altitude\n                                </Card.Header>\n                                <Card.Body className=\"card-body-adjustment\">\n                                    {dropAltitude} ft\n                                </Card.Body>\n                            </Card>\n                            <Card>\n                                <Card.Header as=\"h6\">\n                                    Freefall\n                                </Card.Header>\n                                <Card.Body className=\"card-body-adjustment\">\n                                    {freefall} seconds\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>                           \n        \n                    <div className=\"map-background\" style={style}>\n                        {jumpType}\n                        {shadow}\n                    \n                    </div>\n                    <Classifications />\n                </div>\n           \n        )\n    }\n}\n\nexport default Screen","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Alert } from 'react-bootstrap';\nimport Info from './info/info'\nimport Screen from './screen/screen'\n\nimport './log.css'\n\nexport const AlertDismissible = ({ show }) => {\n    if (show) {\n        return (\n            <Alert variant=\"warning\">\n                We are currently in development - play around and enter records - but you'll have to start over when we launch.<br></br>Stay tuned for the announcement.\n            </Alert>\n        );\n    }\n}\n\nclass Log extends Component {\n    render() {\n        let {login, load, handleChange, handleDateChange, accountId, jumpName, jumpDate, dropAltitude, freefall} = this.props\n        \n        if (load && !login) {return <Redirect to=\"/\" />}\n\n        return (\n            <div className=\"log\">\n            <AlertDismissible show={true} />\n                <h2 className=\"head\">Log a Jump</h2>\n                <div className=\"content\">\n                    <Info  handleChange={handleChange} handleDateChange={handleDateChange} accountId={accountId} jumpName={jumpName}  />\n                    <Screen jumpDate={jumpDate} dropAltitude={dropAltitude} freefall={freefall}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Log","import React from 'react';\nimport freefallpic from '../../../assets/freefall.png';\nimport backgroundPlaceholder from '../../../assets/google-map-placeholder.jpg';\nimport { Container, Card, CardGroup } from 'react-bootstrap';\nimport './jump.css';\n\nconst Jump = ({ jumpName, jumpDate, dropAltitude, freefall }) => {\n    return (\n            <JumpDisplay jumpDate={jumpDate} dropAltitude={dropAltitude} freefall={freefall} />\n    )\n}\n\nexport default Jump\n\nconst JumpDisplay = ({ jumpDate, dropAltitude, freefall }) => {\n\n    let jumpType = (\n        <div style={{ width: \"100%\", height: \"100%\", margin: \"auto\", position: \"relative\", zIndex: \"10\", }}>\n        <svg width=\"147px\" height=\"146px\" viewBox=\"0 0 147 146\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\">\n            <defs>\n                <pattern id=\"image\" patternUnits=\"userSpaceOnUse\" height=\"147\" width=\"146\">\n                    <image x=\"0\" y=\"0\" height=\"147\" width=\"146\" xlinkHref={freefallpic}></image>\n                </pattern>\n            </defs>\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <g id=\"gen1\" transform=\"translate(-782.000000, -1123.000000)\">\n                    <g id=\"c-phase1-(1)\" transform=\"translate(783.000000, 1124.000000)\">\n                        <ellipse id=\"Oval\" fill=\"url(#image)\"  cx=\"72.2491349\" cy=\"72\" rx=\"72.2491349\" ry=\"72\"></ellipse>\n                       \n                        <ellipse id=\"Oval\" stroke=\"#24272A\" strokeWidth=\"2\" cx=\"72.2491349\" cy=\"72\" rx=\"72.2491349\" ry=\"72\"></ellipse>\n                    </g>\n                </g>\n            </g>\n        </svg>\n        \n    </div>\n    )\n    let shadow = (\n        <div style={{ width: \"60%\", position: \"relative\", top: \"-10px\", margin: \"auto\" }}>\n            <svg width=\"200px\" height=\"25px\" viewBox=\"0 0 200 25\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\">\n                <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" fillOpacity=\"0.2\">\n                    <g id=\"create\" transform=\"translate(-801.000000, -709.000000)\" fill=\"#000000\">\n                        <ellipse id=\"Oval\" cx=\"901\" cy=\"721.048193\" rx=\"100\" ry=\"12.0481928\"></ellipse>\n                    </g>\n                </g>\n            </svg>\n        </div>\n    )\n\n    let style = {\n        backgroundImage: `url(${backgroundPlaceholder})`,\n        borderRadius: \"10px\",\n        padding: \"5%\",\n        marginBottom: \"5%\",\n        textAlign: \"center\"\n    }\n    \n    return (\n        <Container fluid>\n        \n                    <CardGroup>\n                        <Card bg=\"light\" className=\"card-spacing\">\n                            <Card.Header as=\"h6\">\n                                Date\n                            </Card.Header>\n                            <Card.Body className=\"card-body-adjustment\">\n                                {jumpDate}\n                            </Card.Body>\n                        </Card>\n                        <Card className=\"card-spacing\">\n                            <Card.Header as=\"h6\">\n                                Drop Altitude\n                            </Card.Header>\n                            <Card.Body className=\"card-body-adjustment\">\n                                {dropAltitude} ft\n                            </Card.Body>\n                        </Card>\n                        <Card className=\"card-spacing\">\n                            <Card.Header as=\"h6\">\n                                Freefall\n                            </Card.Header>\n                            <Card.Body className=\"card-body-adjustment\">\n                                {freefall} seconds\n                            </Card.Body>\n                        </Card>\n                    </CardGroup>\n                \n                    <div style={style}>\n                        {jumpType}\n                        {shadow}\n                    </div>\n            \n        </Container>            \n  \n    )\n}","import React from 'react';\n\nimport Jump from '../../jump/jump';\nimport '../creation.css';\n\n//miss icon for sending and share\nconst CreationAccount = ({ jumpName, jumpDate, dropAltitude, freefall }) => {\n    return (\n        <Jump\n            jumpName={jumpName}\n            jumpDate={jumpDate}\n            dropAltitude={dropAltitude}\n            freefall={freefall}\n        />\n    )\n}\n\nexport default CreationAccount","import React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Container, Card } from 'react-bootstrap';\n\nimport CreationAccount from '../creation/creationAccount/creationAccount'\nimport './account.css';\n\nclass Account extends Component {\n    render() {\n        let { jumps, login, load } = this.props\n        if (load && !login) {return <Redirect to=\"/\" />}\n        let Jumps = 'loading'\n        if (jumps && jumps.length === 0) { return <Redirect to=\"/log\" /> }\n        if (jumps.length > 0) {\n            Jumps = jumps.map(jump => {\n                return (\n                    <Card key={jump.jumpIdentifier} className=\"spacing\">\n                        <Card.Header>\n                            <Link to={{\n                                pathname: \"/@\" + jump.jumpName,\n                                hash: jump.jumpIdentifier\n                                }} key={jump.jumpIdentifier}>\n                            <h3>{jump.jumpName}</h3>\n                            </Link>\n                        </Card.Header>\n                        <Card.Body>\n                            <CreationAccount\n                                jumpName={jump.jumpName}\n                                jumpDate={jump.jumpDate}\n                                dropAltitude={jump.dropAltitude}\n                                freefall={jump.freefall}\n                            />\n                        </Card.Body>\n                    </Card>\n                    )\n            })\n        }\n        return (\n            <div>\n            <Container>\n                <div>\n                    <h1 className=\"head\">Your Jumps</h1>\n                    <p>Review and Share</p>\n                </div>\n               \n                    {Jumps}\n               \n            </Container>\n            </div>\n        )\n    }\n}\n\nexport default Account","import React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { TiDelete } from \"react-icons/ti\";\nimport { Card } from 'react-bootstrap';\nimport {DEFAULT_GAS_VALUE} from \"../../../container/App/App\";\n\nclass CreationProfile extends Component {\n    deleteJump = () => {\n        let { contract, jump, handleChange, handleDelete } = this.props\n        handleDelete()\n        contract.deleteJumpProfile({\n            tokenId: jump.jumpIdentifier\n        }, DEFAULT_GAS_VALUE).then(response => {\n            console.log(\"[profile.js] jumps\", response.len)\n            let newJumps = response.jumps\n            handleChange({ name: \"jumps\", value: newJumps })\n            handleDelete()\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n    render() {\n        let { jump } = this.props\n        if (!jump) { return <Redirect to=\"/profile\" /> }\n\n        let jumpType = \"SOLO\"\n\n        let solo = (<div>\n            \n        </div>)\n\n        let formation = (<div>\n            \n        </div>)\n\n        let wingsuit = (<div>\n           \n        </div>)\n\n        let basejump = (<div>\n           \n        </div>)\n\n        let tandem= (<div>\n           \n            </div>)\n\n        let show =\n            <Link to={{\n                pathname: \"/@\" + jump.jumpName,\n                hash: jump.jumpIdentifier\n            }} key={jump.jumpIdentifier}>\"ULTRA RARE\"</Link>;\n        if (jumpType === \"SOLO\") {\n            show =\n                <Link to={{\n                    pathname: \"/@\" + jump.jumpName,\n                    hash: jump.jumpIdentifier\n                }} key={jump.jumpIdentifier}>{solo}</Link>\n        } else if (jumpType === \"FORMATION\") {\n            show =\n                <Link to={{\n                    pathname: \"/@\" + jump.jumpName,\n                    hash: jump.jumpIdentifier\n                }} key={jump.jumpIdentifier}>{formation}</Link>\n        } else if (jumpType === \"WINGSUIT\") {\n            show =\n                <Link to={{\n                    pathname: \"/@\" + jump.jumpName,\n                    hash: jump.jumpIdentifier\n                }} key={jump.jumpIdentifier}>{wingsuit}</Link>\n        } else if (jumpType === \"BASEJUMP\") {\n            show =\n                <Link to={{\n                    pathname: \"/@\" + jump.jumpName,\n                    hash: jump.jumpIdentifier\n                }} key={jump.jumpIdentifier}>{basejump}</Link>\n        } else if (jumpType === \"TANDEM\") {\n            show =\n                <Link to={{\n                    pathname: \"/@\" + jump.jumpName,\n                    hash: jump.jumpIdentifier\n                }} key={jump.jumpIdentifier}>{tandem}</Link>\n        }\n        let info = jump.jumper\n            ? <div>{jump.jumpDate} - {jump.jumpName} <TiDelete onClick={this.deleteJump} style={{ marginLeft: \"5px\", color: \"#ff4143\", fontSize: \"2rem\" }} /></div>\n            : <div>{jump.jumpName} <TiDelete onClick={this.deleteJump} style={{ marginLeft: \"5px\", color: \"#ff4143\", fontSize: \"2rem\" }} /></div>\n       \n        return (\n            <div style={{ margin: \"5px\", display: \"flex\", flexBasis: \"row wrap\", justifyContent: \"center\" }}>\n                {show}\n                <Card>\n                    {info}\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default CreationProfile","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n\nimport CreationProfile from '../creation/creationProfile/creationProfile';\nimport Spinners from '../common/spinner/spinner'\n\nclass Profile extends Component {\n    state = {\n        running: false\n    }\n\n    handleDelete = () => {\n        let state = this.state.running\n        this.setState({ running: !state })\n    }\n    render() {\n        let { jumps, contract, handleChange, login, load } = this.props\n        if (load && !login) { return <Redirect to=\"/\" /> }\n        let Jumps = <Spinners />\n        if (jumps && jumps.length === 0) { return <Redirect to=\"/log\" /> }\n        if (jumps.length > 0) {\n            Jumps = jumps.map(jump => {\n                return (\n                    <li style={{ textDecoration: \"none\" }} key={jump.jumpIdentifier}>\n                        <CreationProfile\n                            contract={contract}\n                            jump={jump}\n                            handleChange={handleChange}\n                            handleDelete={this.handleDelete} />\n                    </li>)\n            })\n        }\n        if (this.state.running) { return <Goodbye /> }\n        return (\n            <div>\n                <h1>Your Jumps</h1>\n                <p>review or delete</p>\n                <div>\n                    <ul style={{ textAlign: \"center\", padding: \"10px\", margin: \"auto\", textDecoration: \"none\", listStyleType: \"none\" }}>\n                        {Jumps}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile\n\nconst Goodbye = ({width=\"300px\", color=\"black\"}) => (\n    <div>\n        <h2>Deleting Jump...</h2>\n        <Spinners />   \n    </div>\n)","import React from 'react';\nimport Jump from '../../jump/jump';\nimport { Container } from 'react-bootstrap';\n\nexport const CreationSingle = ({ jumpDate, dropAltitude, freefall}) => {\n    return (\n        <Container>\n            <div className=\"creation-bigjump\">            \n                <Jump jumpDate={jumpDate} dropAltitude={dropAltitude} freefall={freefall} />\n            </div>\n        </Container>\n    )\n}\n\nexport const CreationSingleSmall = ({ jumpDate, dropAltitude, freefall }) => {\n    return (\n        <Container>\n            <div className=\"creation-smalljump\">\n                <Jump jumpDate={jumpDate} dropAltitude={dropAltitude} freefall={freefall} />\n            </div>\n        </Container>\n    )\n}","import React from 'react';\n\nimport './backdrop.css';\n\nconst backdrop = ({show, clicked}) => (\n    show ? <div className=\"Backdrop\" onClick={clicked}></div> : null\n);\n\nexport default backdrop;","import React, { Component } from 'react';\n\nimport './modal.css';\nimport Backdrop from '../Backdrop/backdrop';\n\nclass Modal extends Component {\n    render () {\n        let { show, CancelHandler, children} = this.props\n        return (\n            <div>\n                <Backdrop show={show} clicked={CancelHandler} />\n                <div\n                    className=\"Modal\"\n                    style={{\n                        transform: show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: show ? '1' : '0'\n                    }}>\n                    {children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport { CreationSingleSmall } from '../creation/creationSingle/creationSingle';\nimport Modal from '../common/Modal/modal';\nimport Button from '../common/Button/Button';\n\nclass SharePage extends Component {\n    state = {\n        copied: false\n    }\n    shareOnTwitter = () => {\n        // found on https://gist.github.com/McKinneyDigital/2884508#file-share-twitter-js\n        let shareURL = \"http://twitter.com/share?url=\"; //url base\n        let params = {\n            text: \"Checkout this jump\",\n            via: \"PARALOG\",\n        }\n        for (let prop in params) shareURL += '&' + prop + '=' + encodeURIComponent(params[prop]);\n        window.open(shareURL, '', 'left=0,top=0,width=550,height=450,personalbar=0,toolbar=0,scrollbars=0,resizable=0');\n    }\n    shareOnFacebook = () => {\n        let shareURL = 'https://www.facebook.com/sharer/sharer.php?'; //url base\n        window.open(shareURL, '', 'left=0,top=0,width=550,height=450,personalbar=0,toolbar=0,scrollbars=0,resizable=0');\n    }\n    render() {\n        let { jumpName, jumpDate, back, backCancelHandler, location, dropAltitude, freefall } = this.props\n        let address = window.location.origin + \"/share\" + location.hash\n        return (\n            <Modal show={back} CancelHandler={backCancelHandler}>\n                <div style={{ width: \"100%\", height: \"100%\", marginBottom: \"10px\" }} >\n                    <h3>Share a Jump</h3>\n                    <div>\n                       <CreationSingleSmall\n                                    jumpName={jumpName}\n                                    jumpDate={jumpDate}\n                                    dropAltitude={dropAltitude}\n                                    freefall={freefall}\n                                    />\n                        <p style={{ margin: \"0\" }}>{jumpName}</p>\n                        <hr />\n                    </div>\n                    <div style={{ marginBottom: \"10px\" }}>\n                        <p style={{ backgroundColor: \"white\", borderRadius: \"5px\", padding: \"4px 2px\", wordWrap: \"break-word\" }}>{address}</p>\n                        <CopyToClipboard text={address}\n                            onCopy={() => this.setState({ copied: true })}>\n                            <button style={{\n                                backgroundColor: \"#fbb040\",\n                                color: \"#f2f2f2\",\n                                borderRadius: \"5px\",\n                                padding: \"4px 2px\",\n                                cursor: \"alias\",\n                                boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.5)\"\n                            }}>Copy Link</button>\n                        </CopyToClipboard>\n                        {this.state.copied ? <span style={{ color: '#961be0', marginLeft: \"5px\" }}>Copied.</span> : null}\n                    </div>\n                    <div>\n                        <p style={{ color: \"#999\" }}>or share directly on</p>\n                        <div style={{display: \"flex\", justifyContent:\"space between\"}}>\n                            <Button description=\"Twitter\" action={this.shareOnTwitter} />\n                            <Button description=\"Facebook\" action={this.shareOnFacebook} />\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        )\n    }\n}\n\nexport default withRouter(SharePage)","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { GrTwitter, GrFacebook } from 'react-icons/gr';\n\nimport { CreationSingle } from '../creation/creationSingle/creationSingle';\nimport SharePage from '../Share/share';\nimport Spinners from '../common/spinner/spinner';\n\nimport \"./single.css\"\nclass Single extends Component {\n    render() {\n        let {\n            jumps,\n            login,\n            load,\n            history,\n            back,\n            backShowHandler,\n            backCancelHandler\n        } = this.props\n        if (!load) { return <Spinners /> }\n        if (load && !login) { return <Redirect to=\"/\" /> }\n        let jumpIdentifier = history.location.hash.slice(1)\n        let jumpName = history.location.pathname.slice(2)\n        let jump = jumps.filter((jump) => jump.jumpIdentifier === jumpIdentifier && jump.jumpName === jumpName)[0]\n        if (!jump) { return <Redirect to=\"/account\" /> }\n\n        let Jump = <CreationSingle\n                jumpDate={jump.jumpDate}\n                dropAltitude={jump.dropAltitude}\n                freefall={jump.freefall}\n                />\n        return (\n            <div>\n                <SharePage\n                    jumpName={jump.jumpName}\n                    jumpDate={jump.jumpDate}\n                    dropAltitude={jump.dropAltitude}\n                    freefall={jump.freefall}\n                    backCancelHandler={backCancelHandler}\n                    back={back}\n                    jumpIdentifier={jump.jumpIdentifier}/>\n                <div>\n                    <h2>Checkout {jump.jumpName}!</h2>\n                    <div>\n                        {Jump}\n                    </div>\n                    <div>\n                        <SendAndShare backShowHandler={backShowHandler} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(Single)\n\n\n\nconst SendAndShare = ({ backShowHandler }) => {\n    let style = { display: \"flex\", flexDirection: \"column\", margin: \"auto\" }\n    return (\n        <div>\n          \n            <span style={style}>\n                <Share clicked={backShowHandler} />\n            </span>\n        </div>\n    )\n}\n\nconst Share = ({ clicked }) => {\n    let share = (\n            <div>\n                <p className=\"text\">Nice jump - time to brag a bit:</p>\n                <span className=\"share-icons\"><GrTwitter className=\"flaticon\" /><GrFacebook className=\"flaticon\" /></span>\n            </div>\n       )\n    return (\n        <button className=\"sharecard\" onClick={clicked}>\n            {share}\n        </button>\n    )\n}","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { Keyframes, Frame } from 'react-keyframes';\nimport { ProgressBar } from 'react-bootstrap';\n\nimport Spinners from '../../common/spinner/spinner';\nimport {DEFAULT_GAS_VALUE} from \"../../../container/App/App\";\n\nimport './animation.css';\nclass Animation extends Component {\n    state = {\n        running: true\n    }\n    componentWillMount() {\n        let {jumpName, jumpDate, dropAltitude, freefall, handleChange, contract, jumps } = this.props\n        console.log(\"**name \", jumpName, \"**jumpDate\", jumpDate, \"**dropAltitude\", dropAltitude, \"**freefall\", freefall, \"**dna\")\n        contract.logJump({\n            jumpName: jumpName,\n            jumpDate: jumpDate,\n            dropAltitude: parseInt(dropAltitude, 10),\n            freefall: parseInt(freefall, 10),\n        }, DEFAULT_GAS_VALUE).then(response => {\n            console.log(\"[animation.js] logging\", response)\n            let jump = response\n            let newJumps = jumps.concat(jump)\n            handleChange({ name: \"jumpIdentifier\", value: jump.jumpIdentifier })\n            console.log(jump);\n            handleChange({ name: \"jumps\", value: newJumps })\n            this.setState({running:false})\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n    render() {\n        let { jumpName, login, load, jumpIdentifier } = this.props\n        const shadow = (\n            <div style={{ width: \"100%\", position: \"relative\", top: \"40px\", margin: \"auto\" }}>\n                <svg width=\"200px\" height=\"25px\" viewBox=\"0 0 200 25\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\">\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" fillOpacity=\"0.2\">\n                        <g id=\"create\" transform=\"translate(-801.000000, -709.000000)\" fill=\"#000000\">\n                            <ellipse id=\"Oval\" cx=\"901\" cy=\"721.048193\" rx=\"100\" ry=\"12.0481928\"></ellipse>\n                        </g>\n                    </g>\n                </svg>\n            </div>\n        )\n        const One = ({width=\"100%\"}) => (\n            <div>\n            <h2>25% Complete</h2>\n                <ProgressBar animated now={25} />\n            </div>\n        )\n        const Two = ({width=\"100%\"}) => (\n            <div><h2>50% Complete</h2>\n            <ProgressBar animated now={50} />\n            </div>\n        )\n        const Three = ({width=\"100%\"}) => (\n            <div><h2>75% Complete</h2>\n            <ProgressBar animated now={75} />\n            </div>\n        )\n        const Four = ({width=\"100%\"}) => (\n            <div><h2>100% Complete</h2>\n            <ProgressBar animated now={100} />\n            </div>\n        )\n        if (!load) {return <Spinners />}\n        if (load && !login) {return <Redirect to=\"/\" />}\n        if (!this.state.running) { return <Redirect to={{ pathname: \"/@\" + jumpName, hash: jumpIdentifier }} /> }\n        return (\n            <div>\n                <h3>Logging...</h3>\n                <div className=\"logging-screen\">\n                    <Keyframes>\n                        <Frame duration={1000} component={One} ></Frame>\n                        <Frame duration={1000} component={Two} ></Frame>\n                        <Frame duration={1000} component={Three} ></Frame>\n                        <Frame duration={1000} component={Four} ></Frame>\n                    </Keyframes>\n                    <div>\n                        {shadow}\n                    </div>\n                </div>\n                \n            </div>)\n    }\n}\n\nexport default Animation\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { GiImperialCrown } from \"react-icons/gi\";\n\nimport { CreationSingle } from '../creation/creationSingle/creationSingle';\nimport Spinner from '../common/spinner/spinner';\nimport Button from '../common/Button/Button';\n\nclass SocialShare extends Component {\n    state = {\n        loading: true,\n        jump: null,\n        copied: false\n    }\n    componentDidMount() {\n        let {\n            history,\n            contract\n        } = this.props\n        let jumpIdentifier = history.location.hash.slice(1)\n        console.log(jumpIdentifier)\n        contract.getJump({ tokenId: jumpIdentifier }).then(response => {\n            this.setState({\n                jump: response,\n                loading: false\n            })\n        })\n    }\n    render() {\n        let {\n            login,\n            requestSignIn,\n            location\n        } = this.props\n        let { loading, jump } = this.state\n      \n        if (loading) { return <Spinner /> }\n        let Jump = <CreationSingle\n                    jumpName={jump.jumpName}\n                    jumpDate={jump.jumpDate}\n                    dropAltitude={jump.dropAltitude}\n                    freefall={jump.freefall}\n                    />\n        let address = window.location.origin + \"/share\" + location.hash\n        \n        let style = {\n            width: \"70%\",\n            maxWidth: \"800px\",\n            margin: \"2% auto\",\n            display: \"flex\",\n            justifyContent: \"space-between\"\n        }\n        let poster = <div>\n            <p>or do you parachute? Click to get started and safeguard your jump record!</p>\n            <Button description=\"Get Started\" action={requestSignIn} /></div>\n        if (login) {\n            poster = <p>Log your jumps.</p>\n        }\n        return (\n            <div>\n                <h1>Checkout {jump.jumpName}!</h1>\n                <div>\n                    {Jump}\n                </div>\n                <div style={style} >\n                    <JumpType type={jump.jumpType} jumpName={jump.jumpName} />\n                    <div>\n                        <h5><GiImperialCrown style={{ color: \"#9437ff\", fontSize: \"1.1rem\" }} />{jump.jumper}'s jump.</h5>\n                    </div>\n                </div>\n                <div style={{ marginBottom: \"10px\" }}>\n                    {poster}\n                    <p style={{ backgroundColor: \"white\", borderRadius: \"5px\", padding: \"4px 2px\", wordWrap: \"break-word\" }}>\n                        Do you also want to share {jump.jumpName}?\n                        </p>\n                    <CopyToClipboard text={address}\n                        onCopy={() => this.setState({ copied: true })}>\n                        <button style={{ \n                                backgroundColor: \"#fbb040\", \n                                color: \"#f2f2f2\", \n                                borderRadius: \"5px\", \n                                padding: \"4px 2px\", \n                                cursor: \"alias\",\n                                boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.5)\" }}>Copy Link</button>\n                    </CopyToClipboard>\n                    {this.state.copied ? <span style={{ color: '#961be0', marginLeft: \"5px\" }}>Copied.</span> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(SocialShare)\n\nconst JumpType = ({ rate, jumpName }) => {\n    let common = (<div>\n        \n    </div>)\n\n    let uncommon = (<div>\n       \n    </div>)\n\n    let rare = (<div>\n       </div>)\n\n    let veryRare = (<div>\n        \n    </div>)\n\n    let show = null\n    if (rate === \"COMMON\") {\n        show = <div>{common}<span>common</span></div>\n    } else if (rate === \"UNCOMMON\") {\n        show = <div>{uncommon}<span>uncommon</span></div>\n    } else if (rate === \"RARE\") {\n        show = <div>{rare}<span>rare</span></div>\n    } else if (rate === \"VERY RARE\") {\n        show = <div>{veryRare}<span>very rare</span></div>\n    } else if (rate === \"ULTRA RARE\") {\n        show = <div>\"ULTRA RARE\"</div>\n    }\n\n    return (\n        <div>\n            <h5>Welcome! {jumpName} is </h5>\n            {show}\n        </div>\n    )\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { CreationSingle } from '../creation/creationSingle/creationSingle';\nimport { GiImperialCrown } from \"react-icons/gi\";\n\nconst ShowPage = ({ jumps, history }) => {\n    let jumpIdentifier = history.location.hash.slice(1)\n    let jump = jumps.filter((jump) => jump.jumpIdentifier === jumpIdentifier)[0]\n    let Jump = <CreationSingle\n            jumpName={jump.jumpName}\n            jumpDate={jump.jumpDate}\n            dropAltitude={jump.dropAltitude}\n            freefall={jump.freefall}\n            />\n\n    return (\n        <div>\n            <h1>Checkout {jump.jumpName}!</h1>\n            <div>\n                {Jump}\n            </div>\n            <div className=\"display\">\n               \n                <div>\n                    <h5><GiImperialCrown style={{ color: \"#9437ff\", fontSize: \"1.1rem\" }} />Jumper: {jump.jumper}</h5>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ShowPage)","// import 'babel-polyfill';\nimport React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\n\nimport Header from '../../component/Header/Header';\nimport Footer from '../../component/footer/footer';\nimport Home from '../../component/home/home';\nimport Log from '../../component/Log/log';\nimport Account from '../../component/Account/account';\nimport Profile from '../../component/Profile/profile';\nimport Single from '../../component/Single/single';\nimport Animation from '../../component/Log/animation/animation';\nimport SocialShare from '../../component/SocialShare/SocialShare';\nimport ShowPage from '../../component/showpage/showpage';\n\nimport dotenv from 'dotenv';\n\nimport './App.css';\n\ndotenv.config();\n\nlet randomColor = require('randomcolor');\nlet generate = require('project-name-generator');\n\nexport const DEFAULT_GAS_VALUE = 10000000000000;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false,\n            loggedIn: false,\n            backDrop: false,\n            back: false,\n            jumps: [],\n            accountId: '',\n            color: randomColor(),\n            backgroundColor: randomColor(),\n            jumpName: generate({ words: 2, alliterative: true }).spaced,\n            jumpDate: new Date().toString().substring(0,16),\n            dropAltitude: '',\n            freefall: '',\n            jumpIdentifier: '',\n            db: '',\n            token: '',\n            threadId: ''\n        }\n        this.signedInFlow = this.signedInFlow.bind(this);\n        this.requestSignIn = this.requestSignIn.bind(this);\n    }\n\n    componentDidMount() {\n        let loggedIn = window.walletAccount.isSignedIn();\n        if (loggedIn) {\n            this.signedInFlow();\n        } else {\n            this.signedOutFlow();\n        }\n    }\n\n    signedOutFlow = () => {\n        this.setState({\n            loggedIn: false,\n            loaded: true,\n        });\n        return <Redirect to=\"/\" />\n    }\n\n    getJumps = (jumper) => {\n        return this.props.contract.getJumps({ jumper: jumper });\n    }\n\n   \n\n    async signedInFlow() {\n        const accountId = await this.props.wallet.getAccountId();\n\n        this.getJumps(accountId).then(res => {\n            console.log(res.len)\n            console.log(res)\n            this.setState({\n                loggedIn: true,\n                accountId: accountId\n            });\n        \n            if (res == null || res.jumps == null || res.jumps.length < 1) {\n                this.setState({\n                    loaded: true\n                });\n            } else {\n                this.setState({\n                    jumps: res.jumps,\n                    loaded: true\n                });\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    async requestSignIn() {\n        const appTitle = 'PARALOG';\n        await this.props.wallet.requestSignIn(\n            window.nearConfig.contractName,\n            appTitle\n        )\n    }\n\n    requestSignOut = () => {\n        this.setState({ loaded: false })\n        this.props.wallet.signOut();\n        setTimeout(this.signedOutFlow, 2000);\n    }\n\n    handleChange = ({ name, value }) => {\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleDateChange = ({ name, value }) => {\n        this.setState({\n            [name]: value.toString().substring(0,16)\n        })\n    }\n\n    backdropCancelHandler = () => {\n        this.setState({ backDrop: false })\n    }\n\n    backShowHandler = () => {\n        this.setState({ back: true })\n    }\n\n    backCancelHandler = () => {\n        this.setState({ back: false })\n    }\n\n    render() {\n        let { loggedIn, loaded, jumps, accountId, jumpName, jumpDate, dropAltitude, freefall, backDrop, back, jumpIdentifier, db, token, threadId } = this.state\n        let { contract } = this.props\n        return (\n            <div className=\"App\">\n                <Header\n                    login={loggedIn}\n                    load={loaded}\n                    requestSignIn={this.requestSignIn}\n                    requestSignOut={this.requestSignOut}\n                    accountId={accountId}\n                    length={jumps.length}\n                    handleChange={this.handleChange} />\n                <Switch>\n                    <Route\n                        exact\n                        path='/'\n                        render={() => <Home\n                            login={loggedIn}\n                            load={loaded}\n                            requestSignIn={this.requestSignIn}\n                            accountId={accountId}\n                            length={jumps.length} />}\n                    />\n                    <Route\n                        exact\n                        path=\"/log\"\n                        render={() => <Log\n                            login={loggedIn}\n                            load={loaded}\n                            handleChange={this.handleChange}\n                            handleDateChange={this.handleDateChange}\n                            db={db}\n                            token={token}\n                            threadId={threadId}\n                            accountId={accountId}\n                            jumpName={jumpName}\n                            jumpDate={jumpDate}\n                            dropAltitude={dropAltitude}\n                            freefall={freefall}\n                           \n                        />} />\n                    <Route\n                        exact\n                        path=\"/account\"\n                        render={() => <Account\n                            load={loaded}\n                            login={loggedIn}\n                            jumps={jumps}\n                        />} />\n                    <Route\n                        exact\n                        path=\"/profile\"\n                        render={() => <Profile\n                            load={loaded}\n                            login={loggedIn}\n                            jumps={jumps}\n                            contract={contract}\n                            handleChange={this.handleChange} />} />\n                    <Route\n                        exact\n                        path=\"/@:name\"\n                        render={() => <Single\n                            load={loaded}\n                            login={loggedIn}\n                            contract={contract}\n                            jumps={jumps}\n                            backDrop={backDrop}\n                            back={back}\n                            backdropCancelHandler={this.backdropCancelHandler}\n                            backShowHandler={this.backShowHandler}\n                            backCancelHandler={this.backCancelHandler}\n                            handleChange={this.handleChange}\n                            accountId={accountId}\n                        />} />\n                    <Route\n                        exact\n                        path=\"/share\"\n                        render={() => <SocialShare\n                            load={loaded}\n                            login={loggedIn}\n                            contract={contract}\n                            requestSignIn={this.requestSignIn}\n                        />} />\n                    <Route\n                        exact\n                        path=\"/logging\"\n                        render={() => <Animation\n                            load={loaded}\n                            login={loggedIn}\n                            jumpName={jumpName}\n                            jumpDate={jumpDate}\n                            handleChange={this.handleChange}\n                            jumps={jumps}\n                            contract={contract}\n                            dropAltitude={dropAltitude}\n                            freefall={freefall}\n                            jumpIdentifier={jumpIdentifier}\n                            accountId={accountId}\n                        />} />\n                    <Route\n                        exact\n                        path=\"/showcase\"\n                        render={() => <ShowPage\n                            jumps={jumpArray}\n                        />} />\n                    <Route render={() => <h1>Not found</h1>} />\n                </Switch>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default withRouter(App)\n\n//Show Case\n\nconst BACKGROUNDCOLOR = {\n    green: \"rgba(237,241,133,0.50)\",\n    purple: \"rgba(130,117,175,0.50)\",\n    blue: \"rgba(150,228,221,0.50)\",\n    pink: \"#ffb8c6\"\n}\n\nconst COLOR = {\n    green: \"rgb(90, 179, 121)\",\n    blue: \"rgb(81, 169, 220)\",\n    orange: \"rgb(224, 100, 58)\",\n    gray: \"#004739\"\n}\n\nconst jumpArray = [{\n    backgroundColor: BACKGROUNDCOLOR.green,\n    color: COLOR.green,\n    sausage: \"110.5323\",\n    name: \"J.Corg\",\n    owner: \"jstutzman\",\n    quote: \"Does this color make me look fat?\",\n    rate: \"RARE\",\n    dna: \"J9YqhHfklee9FfqxgwzcFQ==\"\n}, {\n    backgroundColor: BACKGROUNDCOLOR.purple,\n    color: COLOR.blue,\n    sausage: \"0.0000\",\n    name: \"Squatty Blu Doggy\",\n    owner: \"icerove\",\n    quote: \"I like a lot of subjects and things about things...\",\n    rate: \"ULTRA RARE\",\n    dna: \"CDbilm1KtiTDj/8uJfsdrw==\"\n}, {\n    backgroundColor: BACKGROUNDCOLOR.blue,\n    color: COLOR.orange,\n    sausage: \"50.5432\",\n    name: \"Squatty Blu Doggy\",\n    owner: \"potato\",\n    quote: \"We know what we are, but know not what we may be\",\n    rate: \"UNCOMMON\",\n    dna: \"Y8deJkWHjAacSgblf0ASWg==\"\n}, {\n    backgroundColor: BACKGROUNDCOLOR.pink,\n    color: COLOR.gray,\n    sausage: \"199.8672\",\n    name: \"Pbellige\",\n    owner: \"icerove\",\n    quote: \"Do you want me? I am rare corgi and have a cool name!\",\n    rate: \"VERY RARE\",\n    dna: \"HjAacSgblm1KtiYqhHfke==\"\n}]","import \"regenerator-runtime/runtime\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App/App\";\n\nclass AppBuilder extends Component {\n    render() {\n        return (\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <App contract={this.props.contract} wallet={this.props.wallet} />\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default AppBuilder;","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport getConfig from \"./config.js\";\nimport * as nearlib from \"near-api-js\";\nimport AppBuilder from \"./frontend/container/index\";\n\n//initializing contract\nasync function InitContract() {\n    window.nearConfig = getConfig(\"development\");\n\n    // initializing connected to NEAR TestNet\n    window.near = await nearlib.connect(\n        Object.assign(\n            {\n                deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() },\n            },\n            window.nearConfig\n        )\n    );\n\n    console.log(window.near);\n\n    // needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n\n    // getting the account ID.  If unauthorized yet, it's just an empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n   \n   \n    // initializing contract APIs by contract name and configuration\n    let acct = await new nearlib.Account(\n        window.near.connection,\n        window.accountId\n    );\n    console.log(\"acct\", acct);\n    window.contract = await new nearlib.Contract(\n        acct,\n        window.nearConfig.contractName,\n        {\n            // view methods are read only.  They don't modify state but usually return a value\n            viewMethods: [\n                \"ownerOfJump\",\n                \"getJumpsByJumper\",\n                \"getJump\",\n                \"getSender\",\n                \"getJumps\",\n                \"getIdentity\",\n            ],\n            // change methods can modify the state, but you don't get the returned value when called\n            changeMethods: [\n                \"logJump\",\n                \"setJump\",\n                \"setJumpsByJumper\",\n                \"setIdentity\",\n                \"deleteJumpProfile\",\n            ],\n            // sender is the account ID to initialize transactions\n            sender: window.accountId,\n        }\n    );\n\n}\n\n\nwindow.nearInitPromise = InitContract()\n    .then(() => {\n        ReactDom.render(\n            <AppBuilder contract={window.contract} wallet={window.walletAccount} />,\n            document.getElementById(\"root\")\n        );\n    })\n    .catch(console.error);"]}